{"version":3,"sources":["style/assets/down_arrow.svg","style/global.ts","style/theme.ts","components/styles/Header.ts","components/Header.tsx","helpers/index.tsx","api/fetchFilm.tsx","api/fetchGenres.tsx","components/styles/HiddenText.ts","components/HiddenText.tsx","components/styles/LettersTray.ts","components/LettersTray.tsx","components/styles/GameControllers.ts","components/GameControllers.tsx","components/styles/GameBoard.ts","components/GameBoard.tsx","components/styles/Footer.ts","components/Footer.tsx","App.tsx","serviceWorker.js","index.js"],"names":["module","exports","createGlobalStyle","props","theme","colors","text","plain","light","dark","darker","mediumGray","darkGray","Container","styled","header","Title","div","Header","appName","appDescription","upprecaseLettersArr","Array","map","q","w","String","fromCharCode","defaultLetters","allLetters","letter","toLowerCase","getRandom","max","Math","floor","random","fetchFilm","genreId","setNewFilm","a","fetch","process","then","response","json","result","filmPosition","results","length","str","title","test","fetchGenres","LetterContainer","span","HiddenText","filmArr","guessedLetters","index","key","indexOf","LettersContainer","Char","button","disabled","LettersTray","onClickHandler","char","i","onClick","value","DropdownContainer","Select","select","downArrowSvg","Dropdown","onChange","options","e","target","option","name","ContentContainer","GenreCard","Text","p","Button","ButtonContainer","HiddenTextContainer","LettersTrayContainer","FilmContainer","ImageContainer","posterImage","PosterOverlay","active","HintButton","FilmInfo","EMPTY_FILM","poster_path","overview","tagline","GameBoard","useState","counter","setCounter","film","setFilm","genres","setGenres","id","selectedGenre","setSelectedGenre","setGuessedLetters","hintCounter","setHintCounter","from","posterOverlay","setPosterOverlay","updateCounter","amount","newPosterOverlay","_","hearts","useMemo","useEffect","remainingLetters","split","filter","filmLetter","flushedOverlay","resetState","genreName","genre","getGenreId","item","status","type","footer","Description","Footer","children","App","href","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6451f280.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/down_arrow.aa86276a.svg\";","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n\r\n  *{\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    outline: 0;\r\n  }\r\n\r\n  body {\r\n    color: ${(props) => props.theme.colors.text};\r\n    -webkit-font-smoothing: antialiazed;\r\n  }\r\n\r\n  body, input, button {\r\n    font-family: 'Roboto', sans-serif;\r\n    font-size: 16px;\r\n  }\r\n\r\n  h1, h1, h2, h3, h4, h5, h6, strong {\r\n    font-weight: 500;\r\n  }\r\n\r\n  button {\r\n    cursor: pointer;\r\n  }\r\n\r\n\r\n`;\r\n","export const colours = {\n  diamond: '#BCE7FD',\n  eucaliptus: '#40C9A2',\n  iceberg: '#057350',\n  lightest: '#e6f6fe',\n  maastrichtBlue: '#001242',\n  pictonBlue: '#2EB3E8',\n}\n\nconst theme = {\n  colors: {\n    plain: '#DEDEF7',\n    light: '#EFEFFB',\n    dark: '#6462B7',\n    darker: '#4F4DA8',\n    text: '#222',\n    mediumGray: '#777',\n    darkGray: '#303a3e',\n  },\n};\n\nexport default theme;\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.header`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n\r\n  background-color: ${(props) => props.theme.colors.dark};\r\n  font-weight: bold;\r\n  font-family: 'Roboto', sans-serif; \r\n  padding: 16px 32px;\r\n`\r\n\r\nexport const Title = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  color: #fff;\r\n\r\n  h1 {\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  h2{\r\n    font-size: 0.875rem;\r\n    font-weight: 400;\r\n  }\r\n`","import React from 'react'\nimport { Container, Title } from './styles/Header';\n\ninterface IHeaderProps {\n  appName: string\n  appDescription: string\n}\n\nconst Header = ({ appName, appDescription }: IHeaderProps) => (\n  <Container>\n    <Title>\n      <h1>{appName}</h1>\n      <h2>{appDescription}</h2>\n    </Title>\n  </Container>\n)\n\nexport default Header\n","export const upprecaseLettersArr = [...Array(26)].map((q, w) =>\n  String.fromCharCode(w + 65)\n)\n\nexport const defaultLetters = [\n  ' ',\n  \"'\",\n  ':',\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"?\"\n]\n\nexport const allLetters = [\n  ...defaultLetters,\n  ...upprecaseLettersArr,\n  ...upprecaseLettersArr.map((letter) => letter.toLowerCase())\n]\n\nexport const getRandom = (max: number) => Math.floor(max * Math.random())\n\nexport const testFilm = (str: string) => {\n  const regex = /^[A-Za-z ]+$/\n  return regex.test(str)\n}\n\nexport const getGenreId = (genreName: any, genres: any) => {\n  const selectedGenre = genres.filter((genre: any) => genreName === genre.name)\n  return selectedGenre[0].id\n}\n","import { getRandom, testFilm } from '../helpers'\n\nconst API_MOVIEDB_KEY = process.env.REACT_APP_MOVIEDB_API_KEY\nconst RESULTS_PAGES = 1\n\nexport const fetchFilm = async (genreId: number, setNewFilm: React.Dispatch<React.SetStateAction<{\n  title: string;\n  poster_path: string;\n  overview: string;\n  tagline: string;\n}>>) => {\n  const result = await fetch(\n    `https://api.themoviedb.org/3/discover/movie?api_key=${API_MOVIEDB_KEY}&language=en-US&include_adult=false&with_genres=${genreId\n    }&sort_by=vote_count.desc&include_video=false&page=${getRandom(RESULTS_PAGES) + 1}`\n  ).then((response) => response.json())\n  let filmPosition = getRandom(result.results.length)\n  while (!testFilm(result.results[filmPosition].title)) {\n    filmPosition = getRandom(result.results.length)\n  }\n  setNewFilm(result.results[filmPosition])\n}\n\n","const API_MOVIEDB_KEY = process.env.REACT_APP_MOVIEDB_API_KEY\n\nexport const fetchGenres = async () => {\n  return await fetch(\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_MOVIEDB_KEY}&language=en-US`\n  ).then((response) => response.json())\n}\n","import styled from 'styled-components';\r\n\r\ninterface ILetterContainer {\r\n  letter: string\r\n}\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  padding: 8px 0px;\r\n  font-family: 'Roboto';\r\n`\r\n\r\nexport const LetterContainer = styled.span<ILetterContainer>`\r\n  padding: 0 8px;\r\n  display: inline-block;\r\n  border-bottom: ${(props) =>\r\n    props.letter === ' ' ? 'none' : `2px solid ${props.theme.colors.text}`};\r\n  width: 20px;\r\n  padding: 2px;\r\n  text-align: center;\r\n  margin-right: 4px;\r\n  font-size: 20px;\r\n  @media (min-width: 420px) {\r\n    font-size: 22px;\r\n  }\r\n`","import React from 'react'\nimport { Container, LetterContainer } from './styles/HiddenText';\n\ninterface IFilmArr {\n  filmArr: string[]\n  guessedLetters: string[]\n}\n\nconst HiddenText = ({ filmArr, guessedLetters }: IFilmArr) => (\n  <Container>\n    {filmArr.map((letter, index) => (\n      <LetterContainer key={index} letter={letter}>\n        {guessedLetters.indexOf(letter) > -1 ? letter : '?'}\n      </LetterContainer>\n    ))}\n  </Container>\n)\n\nexport default HiddenText\n","import styled from 'styled-components';\r\n\r\nexport const LettersContainer = styled.div`\r\n  display: grid;\r\n\r\n  grid-template-columns: repeat(9, 1fr);\r\n  gap: 8px;\r\n\r\n  margin: 8px auto;\r\n  font-family: 'Roboto';\r\n`\r\n\r\nexport const Char = styled.button`\r\n  background-color: ${(props) => (props.disabled ? props.theme.colors.plain : props.theme.colors.dark)};\r\n  padding: 8px 4px;\r\n  border-radius: 8px;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  color: #fff;\r\n  box-shadow: 0px 3px 15px rgba(0, 0, 0, 0.2);\r\n  border: 0;\r\n  @media (min-width: 420px) {\r\n    font-size: 18px;\r\n  }\r\n`","import React from 'react'\nimport { Char, LettersContainer } from './styles/LettersTray';\nimport { upprecaseLettersArr } from '../helpers'\n\ninterface ILettersTray {\n  guessedLetters: string[]\n  onClickHandler: (char: string) => void\n}\n\nconst LettersTray = ({ guessedLetters, onClickHandler }: ILettersTray) => (\n  <LettersContainer>\n    {upprecaseLettersArr.map((char, i) => (\n      <Char\n        onClick={() => onClickHandler(char)}\n        key={i}\n        value={char}\n        disabled={guessedLetters.indexOf(char) > -1}\n      >\n        {char}\n      </Char>\n    ))}\n  </LettersContainer>\n)\n\nexport default LettersTray\n","import styled from 'styled-components';\r\nimport downArrowSvg from '../../style/assets/down_arrow.svg';\r\n\r\nexport const DropdownContainer = styled.div`\r\n  flex:1;\r\n\r\n  background-color: ${(props) => props.theme.colors.light};\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 0;\r\n  margin: 0;\r\n\r\n  height: 40px;\r\n  border-radius: 8px;\r\n`\r\n\r\nexport const Select = styled.select`\r\n  -webkit-appearance: none;\r\n  -moz-appearance: none;\r\n  appearance: none;\r\n  background-color: transparent;\r\n  background-image: url(${downArrowSvg});\r\n  background-size: 8px;\r\n  background-repeat: no-repeat;\r\n  background-position-y: 50%;\r\n  background-position-x: calc(100% - 8px);\r\n\r\n  width: 100%;\r\n  text-align: left;\r\n  padding: 8px;\r\n  cursor: pointer;\r\n  border: none;\r\n\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n`","import React from 'react'\nimport { DropdownContainer, Select } from './styles/GameControllers';\n\ninterface IOption {\n  name: string\n}\n\ninterface IDropdown {\n  options: IOption[]\n  onClick: any\n  onChange: any\n  title?: string\n}\n\nexport const Dropdown = ({ onClick, onChange, title, options }: IDropdown) => (\n  <DropdownContainer>\n    <Select onClick={() => onClick('')} onChange={(e) => onChange(e.target.value)}>\n      <option value={''}>Choose a genre:</option>\n      {options.map((option, index) => (\n        <option key={index} value={option.name}>\n          {option.name}\n        </option>\n      ))}\n    </Select>\n  </DropdownContainer>\n)\n","import styled from 'styled-components';\r\n\r\ninterface ImageContainerProps {\r\n  posterImage: string;\r\n}\r\n\r\ninterface PosterOverlayProps {\r\n  active?: boolean;\r\n}\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  color: ${(props) => props.theme.colors.text};\r\n  padding: 16px 32px;\r\n  background-color: ${(props) => props.theme.colors.plain};\r\n  min-height: calc(100vh - 130px);\r\n  @media (min-width: 420px) {\r\n    font-size: 18px;\r\n  }\r\n`\r\n\r\nexport const ContentContainer = styled.div`\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n`\r\n\r\nexport const GenreCard = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  background-color: #fff;\r\n  padding: 16px 24px;\r\n\r\n  border-radius: 8px;\r\n`\r\n\r\nexport const Text = styled.p`\r\n  font-size: 18px;\r\n\r\n  svg{\r\n    margin-left: 8px;\r\n    color: ${(props) => props.theme.colors.dark};\r\n  }\r\n`\r\n\r\nexport const Button = styled.button`\r\n  color: white;\r\n  background-color: ${(props) => props.theme.colors.dark};\r\n  text-transform: uppercase;\r\n  border-radius: 8px;\r\n\r\n  height:40px;\r\n\r\n  font-weight: bold;\r\n  padding: 8px 16px;\r\n  text-align: center;\r\n  -webkit-transition-duration: 0.2s; /* Safari */\r\n  transition-duration: 0.2s;\r\n  border: none;\r\n  width: auto;\r\n  box-shadow: 0px 3px 15px rgba(0, 0, 0, 0.2);\r\n\r\n  &:hover {\r\n    background-color: ${(props) => props.theme.colors.darker};\r\n  }\r\n  @media (min-width: 420px) {\r\n    font-size: 18px;\r\n  }\r\n`\r\n\r\nexport const RoundButton = styled(Button)`\r\n  border-radius: 50%;\r\n  width: 90px;\r\n  min-width: 90px;\r\n  height: 90px;\r\n  align-self: flex-end;\r\n  margin: 0 auto;\r\n`\r\n\r\nexport const ButtonContainer = styled.div`\r\n  margin-left: 16px;\r\n`\r\n\r\nexport const HiddenTextContainer = styled.div`\r\n  background-color: #FFF;\r\n  border-radius: 8px;\r\n\r\n  margin-top: 16px;\r\n\r\n  padding: 16px 24px;\r\n`\r\n\r\nexport const LettersTrayContainer = styled.div`\r\n  background-color: #FFF;\r\n  border-radius: 8px;\r\n\r\n  margin-top: 16px;\r\n\r\n  padding: 16px 24px;\r\n`;\r\n\r\nexport const FilmContainer = styled.div`\r\n  background-color: #FFF;\r\n  border-radius: 8px;\r\n\r\n  margin-top: 16px;\r\n\r\n  padding: 24px;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nexport const ImageContainer = styled.div<ImageContainerProps>`\r\n  background: url(${(props) => `http://image.tmdb.org/t/p/w154${props.posterImage}`});\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  width: 250px;\r\n  height: 345px;\r\n\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n\r\n  position: relative;\r\n\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  grid-template-rows: repeat(7, 1fr);\r\n`\r\n\r\nexport const PosterOverlay = styled.div<PosterOverlayProps>`\r\n  background-color: ${(props) => props.active ? 'transparent' : props.theme.colors.plain};\r\n`\r\n\r\nexport const HintButton = styled.button`\r\n  position: absolute;\r\n\r\n  bottom: 0;\r\n\r\n  padding: 8px;\r\n\r\n  background-color: ${(props) => props.theme.colors.dark};\r\n  color: #fff;\r\n  border: 0;\r\n\r\n  width: 100%;\r\n\r\n  h4 {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nexport const FilmInfo = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  justify-content: flex-start;\r\n\r\n  h3 {\r\n    margin-bottom: 16px;\r\n  }\r\n\r\n  margin-left: 16px;\r\n`;","import React, { useState, useEffect, useMemo } from 'react'\n\nimport { allLetters, getGenreId, defaultLetters } from '../helpers'\nimport { fetchGenres, fetchFilm } from '../api'\n\nimport HiddenText from '../components/HiddenText'\nimport LettersTray from '../components/LettersTray'\nimport { Dropdown } from '../components/GameControllers'\n\nimport { FaHeart } from 'react-icons/fa';\n\nimport {\n  Container,\n  ContentContainer,\n  GenreCard,\n  Button,\n  ButtonContainer,\n  HiddenTextContainer,\n  LettersTrayContainer,\n  FilmContainer,\n  ImageContainer,\n  HintButton,\n  FilmInfo,\n  PosterOverlay,\n  Text\n} from './styles/GameBoard'\n\nconst MAX_ATTEMPTS = 7\nconst EMPTY_FILM = { title: '', poster_path: '', overview: '', tagline: '' }\n\nconst GameBoard = () => {\n  const [counter, setCounter] = useState(MAX_ATTEMPTS)\n  const [film, setFilm] = useState(EMPTY_FILM)\n  const [genres, setGenres] = useState<any[]>([])\n  const [selectedGenre, setSelectedGenre] = useState({ id: 99 })\n  const [guessedLetters, setGuessedLetters] = useState<string[]>(defaultLetters)\n  const [hintCounter, setHintCounter] = useState(0)\n  const [posterOverlay, setPosterOverlay] = useState(\n    Array.from({ length: 28 }, () => true)\n  )\n\n  const updateCounter = (amount: number) => {\n    if (counter + amount < 1) {\n      const newPosterOverlay = posterOverlay.map(_ => false)\n      setPosterOverlay(newPosterOverlay)\n    }\n    setCounter(counter + amount)\n  }\n\n  const onCharClick = (char: string) => {\n    setGuessedLetters([...guessedLetters, char, char.toLowerCase()])\n    return film.title.indexOf(char) > -1 ||\n      film.title.indexOf(char.toLowerCase()) > -1\n      ? null\n      : updateCounter(-1)\n  }\n\n  const resetState = () => {\n    setFilm(EMPTY_FILM)\n    setGuessedLetters(defaultLetters)\n    setCounter(MAX_ATTEMPTS)\n    setHintCounter(0)\n\n    const flushedOverlay = posterOverlay.map(() => true)\n    setPosterOverlay(flushedOverlay)\n  }\n\n  const onGetFilmClick = () => {\n    resetState()\n    const genreId = getGenreId(selectedGenre, genres)\n    fetchFilm(genreId, setFilm)\n  }\n\n  const onHintClick = () => {\n    updateCounter(-2)\n\n    const newPosterOverlay = posterOverlay\n    newPosterOverlay[0] = false\n\n    setHintCounter(hintCounter + 1)\n\n    setPosterOverlay(newPosterOverlay)\n  }\n\n  const hearts = useMemo(() => {\n    return Array.from({ length: counter }, (_, index) => ({ id: `Heart-${index}` }))\n  }, [counter])\n\n  useEffect(() => {\n    fetchGenres().then((result) => setGenres(result.genres))\n  }, [])\n  useEffect(() => {\n    if (counter < 1) {\n      setGuessedLetters(allLetters)\n    }\n    const remainingLetters = film.title.split('').filter((filmLetter) => guessedLetters.indexOf(filmLetter) === -1)\n    if (film.title !== '' && remainingLetters.length === 0) {\n      setGuessedLetters(allLetters)\n    }\n  }, [film.title, guessedLetters, counter])\n  return (\n    <Container>\n      <ContentContainer>\n        <GenreCard>\n          {genres && genres.length > 0 && (\n            <Dropdown\n              options={genres}\n              title=\"\"\n              onClick={() => setFilm(EMPTY_FILM)}\n              onChange={setSelectedGenre}\n            />\n          )}\n          <ButtonContainer>\n            <Button onClick={onGetFilmClick}>Get film</Button>\n          </ButtonContainer>\n        </GenreCard>\n        {film.title !== '' && (\n          <>\n            <HiddenTextContainer>\n              <HiddenText filmArr={film.title.split('')} guessedLetters={guessedLetters} />\n            </HiddenTextContainer>\n\n            <LettersTrayContainer>\n              <Text>{counter > 0 && (\n                <>\n                  Guesses left:\n                  {hearts.map(item => (\n                  <FaHeart key={item.id} />\n                ))}\n                </>\n              )}\n              </Text>\n              <LettersTray\n                guessedLetters={guessedLetters}\n                onClickHandler={onCharClick}\n              />\n            </LettersTrayContainer>\n\n            <FilmContainer>\n              <ImageContainer posterImage={film.poster_path}>\n                {posterOverlay.map((status, index) => (\n                  <PosterOverlay key={`Overlay-${index}`} active={!status} />\n                ))}\n\n                {counter > 0 && hintCounter < 1 && (\n                  <HintButton type=\"button\" onClick={onHintClick}>\n                    <h4>HINT</h4>\n                    <p>This will cost you two guesses!</p>\n                  </HintButton>\n                )}\n              </ImageContainer>\n\n              {counter < 1 && (\n                <FilmInfo>\n                  <h3>{film.title}</h3>\n                  {film.overview || film.tagline ? (\n                    <p>{film.overview || film.tagline}</p>\n                  ) : null}\n                </FilmInfo>\n              )}\n            </FilmContainer>\n          </>\n        )}\n      </ContentContainer>\n    </Container>\n  )\n}\n\nexport default GameBoard\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.footer`\r\n  width: 100%;\r\n  color: #fff;\r\n  background-color: ${(props) => props.theme.colors.dark};\r\n  font-weight: bold;\r\n  font-family: 'Courier New', Courier, monospace;\r\n  padding: 16px 32px;\r\n  text-align: center;\r\n`\r\n\r\nexport const Description = styled.p`\r\n  margin: 0;\r\n  & a {\r\n    color: inherit;\r\n  }\r\n`","import React, { ReactElement } from 'react'\nimport { Description, Container } from './styles/Footer';\n\ninterface IFooter {\n  children: ReactElement<any>\n}\n\nconst Footer = ({ children }: IFooter) => (\n  <Container>\n    <Description>\n      {children}\n    </Description>\n  </Container>\n)\n\nexport default Footer\n","import React from 'react'\nimport { ThemeProvider } from 'styled-components';\n\nimport GlobalStyle from './style/global';\nimport theme from './style/theme';\n\nimport Header from './components/Header'\nimport GameBoard from './components/GameBoard'\nimport Footer from './components/Footer'\n\nconst App = () => (\n  <ThemeProvider theme={theme}>\n    <Header appName={'Hangman'} appDescription={'Guess the film'} />\n    <GameBoard />\n    <Footer>\n      <span>This project is available on{' '}\n        <a href=\"https://github.com/zurda/hangman-react\">Github</a></span>\n    </Footer>\n    <GlobalStyle />\n  </ThemeProvider>\n)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}